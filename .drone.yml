---
kind: pipeline
name: build

platform:
  os: linux
  arch: amd64

steps:
- name: patch
  image: alpine
  pull: always
  commands:
  - apk --no-cache add git
  - git clone https://github.com/drone/drone.git
  - cd drone
  - git config user.name ${DRONE_COMMIT_AUTHOR}
  - git config user.email ${DRONE_COMMIT_AUTHOR_EMAIL}
  - for patch in ../patches/*; do git am $patch; done

- name: build-drone
  pull: always
  image: golang:alpine
  commands:
  - apk --no-cache add gcc libc-dev
  - cd drone
  - go build -ldflags "-extldflags \"-static\"" -o ../release/linux/amd64/drone-server ./cmd/drone-server

- name: build-docker
  pull: always
  image: spritsail/docker-build
  settings:
    repo: drone-dev
    dockerfile: drone/docker/Dockerfile.server.linux.amd64

- name: publish
  pull: always
  image: spritsail/docker-publish
  settings:
    from: drone-dev
    repo: spritsail/drone
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username
  when:
    branch:
    - master
    event:
    - push

...
